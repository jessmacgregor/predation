geom_errorbar(aes(ymin=mean_proportion_aliveMS-sdaliveMS, ymax=mean_proportion_aliveMS+sdaliveMS), width=.2,
position=position_dodge(.9)) + ggtitle("Survival by site") +
xlab("Month") + ylab("Mean proportion scallops alive after 24 hrs")
s + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
source("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation/predation.R")
head(pred)
str(pred)
model1 = glmmadmb(prop_alive~Treatment +
(1|Month/Site/Number),
weights = 10, family='binomial', data=pred1)
#hughes model
library(glmmADMB)
#hughes model
install.packages(glmmADMB)
#hughes model
install.packages("glmmADMB")
library(glmmADMB)
model1 = glmmadmb(prop_alive~Treatment +
(1|Month/Site/Number),
weights = 10, family='binomial', data=pred1)
#hughes model
install.packages(glmmADMB, dependencies=TRUE)
#hughes model
install.packages("glmmADMB", dependencies=TRUE)
install.packages("R2admb")
install.packages("glmmADMB",
repos=c("http://glmmadmb.r-forge.r-project.org/repos",
getOption("repos")),
type="source")
library(glmmADMB)
model1 = glmmadmb(prop_alive~Treatment +
(1|Month/Site/Number),
weights = 10, family='binomial', data=pred1)
model1 = glmmadmb(prop_alive~Treatment +
(1|Month/Site/Number), family='binomial', data=pred1)
model1 = glmmadmb(prop_alive~Treatment +
(1|monthname/Site/Number), family='binomial', data=pred1)
pred1$Number=as.factor(pred1$Number)
pred1$Treatment=as.factor(pred1$Treatment)
pred1$Site=as.factor(pred1$Site)
pred1$Month=as.factor(pred1$Month)
pred1$monthname=as.factor(pred1$monthname)
model1 = glmmadmb(prop_alive~Treatment +
(1|monthname/Site/Number), family='binomial', data=pred1)
str(pred1)
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
#packages
install.packages(bbmle, dependencies=TRUE)
#packages
install.packages("bbmle", dependencies=TRUE)
install.packages("lme4", dependencies=TRUE)
install.packages("lattice", dependencies=TRUE)
install.packages("lattice", dependencies = TRUE)
install.packages("multcomp", dependencies=TRUE)
library(glmmADMB)
library(bbmle)
library(lme4)
library(lattice)
library(multcomp)
install.packages("lattice", dependencies=TRUE)
install.packages("lattice", dependencies = TRUE)
library(lattice)
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
library(multcomp)
#just curious
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
model1 = glmmadmb(prop_alive~Treatment +
(1|monthname/Site/Number), family='binomial', data=pred1)
library(glmmADMB)
library(glmmADMB)
library(bbmle)
library(lme4)
library(lattice)
library(multcomp)
model1 = glmmadmb(prop_alive~Treatment +
(1|monthname/Site/Number), family='binomial', data=pred1)
#just curious
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
str(pred1)
model1 = glmer(prop_alive~Treatment +
(1|monthname/Site/Number), family='binomial', data=pred1)
model1 = glmer(prop_alive~Treatment +
(1|monthname/Site/Number), family='binomial', weight = 10,
data=pred1)
summary(model1)
help('isSingular')
model1 = glmer(prop_alive~Treatment +
(1|monthname/Site), family='binomial',
data=pred1)
summary(model1)
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
summary.tukey = summary(tukey)
summary(tukey, test=adjusted("Westfall"))
model1 = glmer(prop_alive~Treatment + (Site) + (monthname) +
(1|Number), family='binomial',
data=pred1)
summary(model1)
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
summary.tukey = summary(tukey)
summary(tukey, test=adjusted("Westfall"))
model1 = glmer(prop_alive~Treatment + (Site) + (monthname), family='binomial',
data=pred1)
model1 = glm(prop_alive~Treatment + (Site) + (monthname), family='binomial',
data=pred1)
summary(model1)
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
summary.tukey = summary(tukey)
summary(tukey, test=adjusted("Westfall"))
install.packages("glmmTMB")
library(glmmTMB)
model1 = glmmTMB(prop_alive~Treatment + (Site) + (monthname), family='beta',
data=pred1)
model1 = glmmTMB(prop_alive~Treatment + (Site) + (monthname), beta_family(link = "logit"),
data=pred1)
model1 = glmmTMB(Alive.after.24hr~Treatment + (Site) + (monthname) + (1|Number),
family=list(family="truncated_poisson", link="log"),
data=pred1)
#GLMM with zero inflated poisson dist, based on hughes et al.
model1 = glmmTMB(Alive.after.24hr~Treatment + (Site) + (monthname) + (1|Number),
family=list(family="truncated_poisson", link="log"), ziformula = ~1,
data=pred1)
model1 = glmmTMB(Alive.after.24hr~Treatment + (Site) + (monthname) + (1|Number),
family="poisson", ziformula = ~1,
data=pred1)
summary(model1)
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
summary.tukey = summary(tukey)
summary(tukey, test=adjusted("Westfall"))
check_overdispersion(model1)
library(glmmTMB)
check_overdispersion(model1)
model1 = glmmTMB(Alive.after.24hr~Treatment + (Site) + (monthname) + (1|Number),
family="poisson", ziformula = ~1,
data=pred1)
check_overdispersion(model1)
library(performance)
check_overdispersion(model1)
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
summary.tukey = summary(tukey)
summary(tukey, test=adjusted("Westfall"))
summary(tukey)
shell_heights <- read.csv("shell_heights.csv")
shell_heights %>%
group_by(month) %>%
mean(shell_height)
library(tidyverse)
shell_heights %>%
group_by(month) %>%
mean(shell_height)
str(shell_heights)
shell_heights$shell_height <- as.numeric(shell_heights$shell_height)
str(shell_heights)
shell_heights %>%
group_by(month) %>%
mean(shell_height)
shell_heights %>%
group_by(month) %>%
summarise()
#shell heights
shell_heights %>%
summarise(month)
meanSH <- shell_heights %>% group_by(month) %>%
summarise(mean_SH=mean(shell_height),.groups = 'drop') %>%
as.data.frame()
meanSH
meanSH <- shell_heights %>% group_by(month) %>%
summarise(avg = mean(shell_height), n = n(shell_height),
sd = sd(shell_height), se = sd/sqrt(shell_height))%>%
as.data.frame()
meanSH <- shell_heights %>% group_by(month) %>%
summarise(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt())%>%
as.data.frame()
my_fun <- function(shell_heights, month, shell_height){
cat_var <- enquo(month)
num_var <- enquo(shell_height)
my_fun <- function(shell_heights, month, shell_height){
cat_var <- enquo(month)
num_var <- enquo(shell_height)
shell_heights %>%
group_by(!!cat_var) %>%
summarize(avg = mean(!!num_var), n = n(),
sd = sd(!!num_var), se = sd/sqrt(n))
}
my_fun(shell_heights, month, shell_height)
meanSH <- shell_heights %>% group_by(month) %>%
summarise(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt(n))%>%
as.data.frame()
meanSH
meanSH <- shell_heights %>% group_by(month) %>%
summarise(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt(n))%>%
as.data.frame()
meanSH
meanSH
shell_heights %>% group_by(month) %>%
summarise(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt(n))%>%
as.data.frame()
source("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation/predation.R")
meanSH <- shell_heights %>% group_by(month) %>%
summarise(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt(n))%>%
as.data.frame()
meanSH
head(meanSH)
source("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation/predation.R")
shell_heights %>% group_by(month) %>%
summarize(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt(n))
str(shell_heights)
shell_heights <- read.csv("shell_heights.csv")
str(shell_heights)
setwd("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation")
source("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation/predation.R")
library(tidyverse)
library(lubridate)
shell_heights <- read.csv("shell_heights.csv")
str(shell_heights)
shell_heights$shell_height <- as.numeric(shell_heights$shell_height)
str(shell_heights)
shell_heights %>% group_by(month) %>%
summarize(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt(n))
Aug <- shell_height %>% filter(month == "August")
Aug <- shell_heights %>% filter(month == "August")
Sep <- shell_heights %>% filter(month == "September")
t.test(Aug$shell_height, Sep$shell_height, paired = FALSE)
t.test(Aug$shell_height, Sep$shell_height, paired = TRUE)
t.test(Aug$shell_height, Sep$shell_height, paired = FALSE)
hist(Aug$shell_height)
hist(Sep$shell_height)
hist(Aug$shell_height)
hist(Sep$shell_height)
#shell heights diff between aug and september!
#graph this
ggplot(shell_heights, aes(month, shell_height)) + geom_boxplot()
h <- ggplot(shell_heights, aes(month, shell_height)) + geom_boxplot() + ggtitle("Shell heights by month") +
xlab("Site") + ylab("Shell height (mm)")
h + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
h <- ggplot(shell_heights, aes(month, shell_height)) + geom_boxplot() + ggtitle("Shell heights by month") +
xlab("Trial month") + ylab("Shell height (mm)")
h + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
source("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation/predation.R")
shell_heights %>% group_by(month) %>%
summarize(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt(n))
t.test(Aug$shell_height, Sep$shell_height, paired = FALSE)
summary(model1)
model1 = glmmTMB(Alive.after.24hr~Treatment + (Site) + (monthname) + (1|Number),
family="poisson", ziformula = ~1,
data=pred1)
library(glmmTMB)
model1 = glmmTMB(Alive.after.24hr~Treatment + (Site) + (monthname) + (1|Number),
family="poisson", ziformula = ~1,
data=pred1)
summary(model1)
#just curious - tukey tests
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
library(performance)
library(bbmle)
library(lme4)
library(lattice)
library(multcomp)
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
head(pred1)
str(pred1)
#convert things to factors
pred1$Number=as.factor(pred1$Number)
pred1$Treatment=as.factor(pred1$Treatment)
pred1$Site=as.factor(pred1$Site)
pred1$monthname=as.factor(pred1$monthname)
#GLMM with zero inflated poisson dist, this worked!
#need to find a paper or 2 to back up
#include shell height as a fixed effect nested in month?? for now no.
model1 = glmmTMB(Alive.after.24hr~Treatment + (Site) + (monthname) + (1|Number),
family="poisson", ziformula = ~1,
data=pred1)
summary(model1)
library(performance)
check_overdispersion(model1)
#just curious - tukey tests
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
summary.tukey = summary(tukey)
summary(tukey)
summary(model1)
Anova(model1)
library(car)
Anova(model1)
model2 = lmmTMB(Alive.after.24hr~ Site + (monthname),
family="poisson", ziformula = ~1,
data=pred1)
model2 <- glm(Alive.after.24hr~ Site + (monthname),
family="poisson", ziformula = ~1,
data=pred1)
model2 <- glm(Alive.after.24hr~ Site + (monthname),
family="poisson",
data=pred1)
summary(model2)
Anova(model2)
tukey2=glht(model2, linfct=mcp(Treatment="Tukey")) #Tukey tests
tukey2=glht(model2, linfct=mcp(site="Tukey")) #Tukey tests
tests
tukey2=glht(model2, linfct=mcp(Site="Tukey")) #Tukey tests
summary.tukey = summary(tukey2)
summary(tukey2)
summary(model2)
tukey2=glht(model2, linfct=mcp(Site="Tukey")) #Tukey tests
summary.tukey = summary(tukey2)
summary(tukey2)
library(dplyr)
library(readxl)
library(lubridate)
getwd()
excel_dir <- "C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/resp2022/resp2022/cornell"
excel_files <- list.files(excel_dir, pattern = "*.xlsx", full.names = TRUE)
# Create an empty data frame to hold the combined data
combined_data <- data.frame()
# Loop through each Excel file
for (excel_file in excel_files) {
# Read in all sheets from the Excel file
all_sheets <- readxl::excel_sheets(excel_file)
# Loop through each sheet in the Excel file
for (sheet_name in all_sheets) {
# Read in the sheet data
sheet_data <- readxl::read_excel(excel_file, sheet = sheet_name)
# Add a column to indicate the original sheet name and file name
sheet_data <- sheet_data %>% mutate(sheet_name = sheet_name, file_name = excel_file)
# Combine the sheet data with the existing combined data
combined_data <- rbind(combined_data, sheet_data)
}
}
#clean it up
combined <- combined_data %>% mutate_all(~gsub("ADPI_|Causeway_|Causeay_|Cuaseway_|Bay_", "", .))
combined <- combined %>%
separate(sheet_name, into = c("site","day","month","year"), sep="_") %>%
mutate_all(~gsub("2022)", "2022", .)) %>%
mutate_all(~gsub("Sept","Sep",.)) %>%
mutate(day = recode(day, '(02'='02','(13'='13',"(28"='28',"(11"='11',
"(26"='26',"(08"="08","(22"="22","(21"="21","(07"="07","(19"="19",
"(01"='01',"(30"='30',"(27"='27',"(09"='09',"(24"='24',"(06"='06',
"(10"='10',"(18"='18',"(05"='05'))
View(combined)
mortality <- read_excel("CCE2022.xlsx", sheet = "ADPImortality")
mortality <- read_excel("CCE2022.xlsx", sheet = "ADPImortality")
mortality <- read_excel("CCE2022pred.xlsx", sheet = "ADPImortality")
population <- read_excel("CCE2022pred.xlsx", sheet = "population2")
mortality <- mortality %>%
rename(total_alive = 5, total_dead = 6, bag_no = 4) %>%
mutate(total_alive = as.numeric(total_alive)) %>%
mutate(total_dead = as.numeric(total_dead)) %>%
mutate(first = 1-(total_dead/total_alive))
View(mortality)
mort <- mortality %>%
filter(site != "Mattituck") %>%
group_by(site, bag_no) %>%
mutate(S_t = cumprod(first)) %>%
ungroup() %>%
group_by(site,time) %>%
mutate(mean_survival = mean(S_t))
View(mort)
mort %>% group_by(time, site) %>%
summarize(avg = mean(first), n = n(),
sd = sd(first), se = sd/sqrt(n))
means <- mort %>% group_by(time, site) %>%
summarize(avg = mean(first), n = n(),
sd = sd(first), se = sd/sqrt(n))
View(means)
predtimes <- means %>%
filter(time == 6 | time == 9)
View(predtimes)
View(population)
unique(population$species)
population %>% group_by(species, site) %>%
summarize(n = n())
preds <- population %>% group_by(species, site) %>%
summarize(n = n())
View(preds)
means <- mort %>% group_by(time, site) %>%
summarize(avg = mean(first), n = n(),
sd = sd(first), se = sd/sqrt(n))
predtimes <- means %>%
filter(time == 6 | time == 9)
View(pred1)
#pulling out some quick stats
meansMS <- unique(pred1$mean_proportion_aliveMS)
meansMS
meansMS <- unique(pred1$mean_proportion_aliveMS, keep(Site, monthname))
meansMS <- unique(pred1$mean_proportion_aliveMS, keep(Site))
source("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation/predation.R")
dummy2 <- data.frame(X = c("Aug", "Sep"), Z = c(0.9133, 0.9467))
p <- ggplot(pred1, aes(x=Site, y=mean_proportion_alive, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_proportion_alive-sdalive, ymax=mean_proportion_alive+sdalive), width=.2,
position=position_dodge(.9)) + ggtitle("Survival by treatment, month, and site") +
xlab("Site") + ylab("Mean proportion scallops alive after 24 hrs") + facet_wrap("monthname") +
geom_abline(data = dummy2, aes(intercept = Z, slope = 0))
p + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
dummy2 <- data.frame(monthname = c("Aug", "Sep"), Z = c(0.9133, 0.9467))
p <- ggplot(pred1, aes(x=Site, y=mean_proportion_alive, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_proportion_alive-sdalive, ymax=mean_proportion_alive+sdalive), width=.2,
position=position_dodge(.9)) + ggtitle("Survival by treatment, month, and site") +
xlab("Site") + ylab("Mean proportion scallops alive after 24 hrs") + facet_wrap("monthname") +
geom_abline(data = dummy2, aes(intercept = Z, slope = 0))
p + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
p <- ggplot(pred1, aes(x=Site, y=mean_proportion_alive, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_proportion_alive-sdalive, ymax=mean_proportion_alive+sdalive), width=.2,
position=position_dodge(.9)) + ggtitle("Survival by treatment, month, and site") +
xlab("Site") + ylab("Mean proportion scallops alive after 24 hrs") + facet_wrap("monthname") +
geom_abline(data = dummy2, aes(intercept = Z, slope = 0), col = "darkred",)
p + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
s <- ggplot(pred1, aes(x=Site, y=mean_proportion_alive, fill=monthname)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_proportion_aliveMS-sdaliveMS, ymax=mean_proportion_aliveMS+sdaliveMS), width=.2,
position=position_dodge(.9)) + ggtitle("Survival by site") +
xlab("Month") + ylab("Mean proportion scallops alive after 24 hrs")  +
geom_abline(data = dummy2, aes(intercept = Z, slope = 0), col = "darkred",)
s + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
t <- ggplot(pred1, aes(x=monthname, y=mean_proportion_alive, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_proportion_aliveMT-sdaliveMT, ymax=mean_proportion_aliveMT+sdaliveMT), width=.2,
position=position_dodge(.9)) + ggtitle("Survival by treatment") +
xlab("Month") + ylab("Mean proportion scallops alive after 24 hrs")  +
geom_abline(data = dummy2, aes(intercept = Z, slope = 0), col = "darkred",)
t + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
p + scale_fill_brewer(palette="Paired") + theme_classic() +
theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=12),
plot.title = element_text(size=22), axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"))
source("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation/predation.R")
library(tidyverse)
library(lubridate)
setwd("C:/Users/macgr/Documents/Stony_Brook_Masters/Scallop_project/predation/predation")
pred <- read.csv("2022_mortality.csv")
shell_heights <- read.csv("shell_heights.csv")
str(shell_heights)
shell_heights$shell_height <- as.numeric(shell_heights$shell_height)
head(pred)
str(pred1)
#shell heights
shell_heights %>% group_by(month) %>%
summarize(avg = mean(shell_height), n = n(),
sd = sd(shell_height), se = sd/sqrt(n))
Aug <- shell_heights %>% filter(month == "August")
Sep <- shell_heights %>% filter(month == "September")
hist(Aug$shell_height)
library(bbmle)
library(lme4)
library(lattice)
library(multcomp)
library(glmmTMB)
#data
head(pred1)
str(pred1)
#convert things to factors
pred1$Number=as.factor(pred1$Number)
pred1$Treatment=as.factor(pred1$Treatment)
pred1$Site=as.factor(pred1$Site)
pred1$monthname=as.factor(pred1$monthname)
#GLMM with zero inflated poisson dist, this worked!
#need to find a paper or 2 to back up
#include shell height as a fixed effect nested in month?? for now no.
model1 = glmmTMB(Alive.after.24hr~Treatment + (Site) + (monthname) + (1|Number),
family="poisson", ziformula = ~1,
data=pred1)
summary(model1)
library(car)
Anova(model1)
library(performance)
check_overdispersion(model1)
#just curious - tukey tests
tukey=glht(model1, linfct=mcp(Treatment="Tukey")) #Tukey tests
summary.tukey = summary(tukey)
summary(tukey)
#not significant at all
#what if we pooled treatment just to get effect of site
model2 <- glm(Alive.after.24hr~ Site + (monthname),
family="poisson",
data=pred1)
summary(model2)
Anova(model2)
tukey2=glht(model2, linfct=mcp(Site="Tukey")) #Tukey tests
summary.tukey = summary(tukey2)
summary(tukey2)
getwd()
